"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[24768],{57330:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>d,default:()=>u,frontMatter:()=>a,metadata:()=>o,toc:()=>l});var s=n(74848),r=n(28453),i=n(94331);const a={title:"global_deaths",description:"This page provides understanding about the function 'global_deaths' from OpenBB.terminals used to fetch historical death statistics for a specified country due to covid.",keywords:["OpenBB.terminals","global_deaths","covid","historical death data","python function","dataframe","country specific statistics"]},d=void 0,o={id:"sdk/reference/alt/covid/global_deaths",title:"global_deaths",description:"This page provides understanding about the function 'global_deaths' from OpenBB.terminals used to fetch historical death statistics for a specified country due to covid.",source:"@site/content/sdk/reference/alt/covid/global_deaths.md",sourceDirName:"sdk/reference/alt/covid",slug:"/sdk/reference/alt/covid/global_deaths",permalink:"/docs/sdk/reference/alt/covid/global_deaths",draft:!1,unlisted:!1,editUrl:"https://github.com/OpenBB-finance/OpenBBTerminal/edit/main/website/content/sdk/reference/alt/covid/global_deaths.md",tags:[],version:"current",lastUpdatedBy:"Diogo Sousa",lastUpdatedAt:1719227954e3,frontMatter:{title:"global_deaths",description:"This page provides understanding about the function 'global_deaths' from OpenBB.terminals used to fetch historical death statistics for a specified country due to covid.",keywords:["OpenBB.terminals","global_deaths","covid","historical death data","python function","dataframe","country specific statistics"]},sidebar:"tutorialSidebar",previous:{title:"global_cases",permalink:"/docs/sdk/reference/alt/covid/global_cases"},next:{title:"ov",permalink:"/docs/sdk/reference/alt/covid/ov"}},c={},l=[{value:"Parameters",id:"parameters",level:2},{value:"Returns",id:"returns",level:2}];function h(e){const t={a:"a",code:"code",h2:"h2",hr:"hr",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.A,{title:"alt.covid.global_deaths - Reference | OpenBB SDK Docs"}),"\n",(0,s.jsx)(t.p,{children:"Get historical deaths for given country."}),"\n",(0,s.jsxs)(t.p,{children:["Source Code: [",(0,s.jsx)(t.a,{href:"https://github.com/OpenBB-finance/OpenBBTerminal/tree/main/openbb_terminal/alternative/covid/covid_model.py#L73",children:"link"}),"]"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-python",children:"openbb.alt.covid.global_deaths(country: str)\n"})}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.h2,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Name"}),(0,s.jsx)(t.th,{children:"Type"}),(0,s.jsx)(t.th,{children:"Description"}),(0,s.jsx)(t.th,{children:"Default"}),(0,s.jsx)(t.th,{children:"Optional"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"country"}),(0,s.jsx)(t.td,{children:"str"}),(0,s.jsx)(t.td,{children:"Country to search for"}),(0,s.jsx)(t.td,{children:"None"}),(0,s.jsx)(t.td,{children:"False"})]})})]}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.h2,{id:"returns",children:"Returns"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Type"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"pd.DataFrame"}),(0,s.jsx)(t.td,{children:"Dataframe of historical deaths"})]})})]}),"\n",(0,s.jsx)(t.hr,{})]})}function u(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},94331:(e,t,n)=>{n.d(t,{A:()=>i});n(96540);var s=n(5260),r=n(74848);function i(e){let{title:t}=e;return(0,r.jsx)(s.A,{children:(0,r.jsx)("title",{children:t})})}},28453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>d});var s=n(96540);const r={},i=s.createContext(r);function a(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);