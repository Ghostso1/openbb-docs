"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[62337],{92649:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>i,metadata:()=>a,toc:()=>o});var s=r(74848),t=r(28453),d=r(94331);const i={title:"search",description:"This page provides search features for mutual funds in a selected country based on various selectable fields. It incorporates features of result sorting and limiting, displayed in either ascending or descending order.",keywords:["Search","Mutual Funds","Country","Fields","Fund Info","Data Sorting","Results Limit","Ascending Order","Descending Order"]},c=void 0,a={id:"terminal/reference/funds/search",title:"search",description:"This page provides search features for mutual funds in a selected country based on various selectable fields. It incorporates features of result sorting and limiting, displayed in either ascending or descending order.",source:"@site/content/terminal/reference/funds/search.md",sourceDirName:"terminal/reference/funds",slug:"/terminal/reference/funds/search",permalink:"/terminal/reference/funds/search",draft:!1,unlisted:!1,editUrl:"https://github.com/OpenBB-finance/openbb-docs/edit/main/content/terminal/reference/funds/search.md",tags:[],version:"current",lastUpdatedBy:"montezdesousa",lastUpdatedAt:1719309708e3,frontMatter:{title:"search",description:"This page provides search features for mutual funds in a selected country based on various selectable fields. It incorporates features of result sorting and limiting, displayed in either ascending or descending order.",keywords:["Search","Mutual Funds","Country","Fields","Fund Info","Data Sorting","Results Limit","Ascending Order","Descending Order"]},sidebar:"tutorialSidebar",previous:{title:"plot",permalink:"/terminal/reference/funds/plot"},next:{title:"sector",permalink:"/terminal/reference/funds/sector"}},l={},o=[{value:"Usage",id:"usage",level:3},{value:"Parameters",id:"parameters",level:2}];function u(e){const n={code:"code",h2:"h2",h3:"h3",hr:"hr",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(d.A,{title:"funds /search - Reference | OpenBB Terminal Docs"}),"\n",(0,s.jsx)(n.p,{children:"Search mutual funds in selected country based on selected field."}),"\n",(0,s.jsx)(n.h3,{id:"usage",children:"Usage"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"search [-b {name,issuer,isin,symbol}] --fund FUND [FUND ...] [-s {country,name,symbol,issuer,isin,asset_class,currency,underlying}] [-l LIMIT] [-r]\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Name"}),(0,s.jsx)(n.th,{children:"Description"}),(0,s.jsx)(n.th,{children:"Default"}),(0,s.jsx)(n.th,{children:"Optional"}),(0,s.jsx)(n.th,{children:"Choices"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"by"}),(0,s.jsx)(n.td,{children:"Field to search by"}),(0,s.jsx)(n.td,{children:"name"}),(0,s.jsx)(n.td,{children:"True"}),(0,s.jsx)(n.td,{children:"name, issuer, isin, symbol"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"fund"}),(0,s.jsx)(n.td,{children:"Fund string to search for"}),(0,s.jsx)(n.td,{children:"None"}),(0,s.jsx)(n.td,{children:"False"}),(0,s.jsx)(n.td,{children:"None"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"sortby"}),(0,s.jsx)(n.td,{children:"Column to sort by"}),(0,s.jsx)(n.td,{children:"name"}),(0,s.jsx)(n.td,{children:"True"}),(0,s.jsx)(n.td,{children:"country, name, symbol, issuer, isin, asset_class, currency, underlying"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"limit"}),(0,s.jsx)(n.td,{children:"Number of search results to show"}),(0,s.jsx)(n.td,{children:"10"}),(0,s.jsx)(n.td,{children:"True"}),(0,s.jsx)(n.td,{children:"None"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"reverse"}),(0,s.jsx)(n.td,{children:"Data is sorted in descending order by default. Reverse flag will sort it in an ascending way. Only works when raw data is displayed."}),(0,s.jsx)(n.td,{children:"False"}),(0,s.jsx)(n.td,{children:"True"}),(0,s.jsx)(n.td,{children:"None"})]})]})]}),"\n",(0,s.jsx)(n.hr,{})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},94331:(e,n,r)=>{r.d(n,{A:()=>d});r(96540);var s=r(5260),t=r(74848);function d(e){let{title:n}=e;return(0,t.jsx)(s.A,{children:(0,t.jsx)("title",{children:n})})}},28453:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>c});var s=r(96540);const t={},d=s.createContext(t);function i(e){const n=s.useContext(d);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),s.createElement(d.Provider,{value:n},e.children)}}}]);