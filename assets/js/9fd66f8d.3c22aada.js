"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[87112],{32408:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>c,toc:()=>l});var d=n(74848),s=n(28453),r=n(94331);const i={title:"dividends",description:"This page provides documentation on how to access the dividend calendar for a given date using our OpenBB Terminal. The date represents the Ex-Dividend Date. Users are guided on how to use it and understand the returned DataFrame.",keywords:["dividends","Ex-Dividend Date","dividend calendar","stock market"]},a=void 0,c={id:"sdk/reference/stocks/disc/dividends",title:"dividends",description:"This page provides documentation on how to access the dividend calendar for a given date using our OpenBB Terminal. The date represents the Ex-Dividend Date. Users are guided on how to use it and understand the returned DataFrame.",source:"@site/content/sdk/reference/stocks/disc/dividends.md",sourceDirName:"sdk/reference/stocks/disc",slug:"/sdk/reference/stocks/disc/dividends",permalink:"/sdk/reference/stocks/disc/dividends",draft:!1,unlisted:!1,editUrl:"https://github.com/OpenBB-finance/openbb-docs/edit/main/content/sdk/reference/stocks/disc/dividends.md",tags:[],version:"current",lastUpdatedBy:"montezdesousa",lastUpdatedAt:1719247347e3,frontMatter:{title:"dividends",description:"This page provides documentation on how to access the dividend calendar for a given date using our OpenBB Terminal. The date represents the Ex-Dividend Date. Users are guided on how to use it and understand the returned DataFrame.",keywords:["dividends","Ex-Dividend Date","dividend calendar","stock market"]},sidebar:"tutorialSidebar",previous:{title:"asc",permalink:"/sdk/reference/stocks/disc/asc"},next:{title:"fipo",permalink:"/sdk/reference/stocks/disc/fipo"}},o={},l=[{value:"Parameters",id:"parameters",level:2},{value:"Returns",id:"returns",level:2}];function h(e){const t={a:"a",code:"code",h2:"h2",hr:"hr",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(r.A,{title:"stocks.disc.dividends - Reference | OpenBB SDK Docs"}),"\n",(0,d.jsx)(t.p,{children:"Gets dividend calendar for given date.  Date represents Ex-Dividend Date"}),"\n",(0,d.jsxs)(t.p,{children:["Source Code: [",(0,d.jsx)(t.a,{href:"https://github.com/OpenBB-finance/OpenBBTerminal/tree/main/openbb_terminal/stocks/discovery/nasdaq_model.py#L52",children:"link"}),"]"]}),"\n",(0,d.jsx)(t.pre,{children:(0,d.jsx)(t.code,{className:"language-python",children:"openbb.stocks.disc.dividends(date: str = None)\n"})}),"\n",(0,d.jsx)(t.hr,{}),"\n",(0,d.jsx)(t.h2,{id:"parameters",children:"Parameters"}),"\n",(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Name"}),(0,d.jsx)(t.th,{children:"Type"}),(0,d.jsx)(t.th,{children:"Description"}),(0,d.jsx)(t.th,{children:"Default"}),(0,d.jsx)(t.th,{children:"Optional"})]})}),(0,d.jsx)(t.tbody,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"date"}),(0,d.jsx)(t.td,{children:"datetime"}),(0,d.jsx)(t.td,{children:"Date to get for in format YYYY-MM-DD"}),(0,d.jsx)(t.td,{children:"None"}),(0,d.jsx)(t.td,{children:"True"})]})})]}),"\n",(0,d.jsx)(t.hr,{}),"\n",(0,d.jsx)(t.h2,{id:"returns",children:"Returns"}),"\n",(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Type"}),(0,d.jsx)(t.th,{children:"Description"})]})}),(0,d.jsx)(t.tbody,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"pd.DataFrame"}),(0,d.jsx)(t.td,{children:"Dataframe of dividend calendar"})]})})]}),"\n",(0,d.jsx)(t.hr,{})]})}function p(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,d.jsx)(t,{...e,children:(0,d.jsx)(h,{...e})}):h(e)}},94331:(e,t,n)=>{n.d(t,{A:()=>r});n(96540);var d=n(5260),s=n(74848);function r(e){let{title:t}=e;return(0,s.jsx)(d.A,{children:(0,s.jsx)("title",{children:t})})}},28453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>a});var d=n(96540);const s={},r=d.createContext(s);function i(e){const t=d.useContext(r);return d.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),d.createElement(r.Provider,{value:t},e.children)}}}]);