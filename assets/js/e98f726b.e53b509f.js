"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[49620],{35168:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>a,default:()=>l,frontMatter:()=>c,metadata:()=>i,toc:()=>h});var r=n(74848),s=n(28453),o=n(94331);const c={title:"exchanges",description:"This page provides information about how to show top crypto exchanges through OpenBB's API with detailed parameters, return types and examples.",keywords:["crypto exchanges","OpenBB API","CoinGecko","cryptocurrency"]},a=void 0,i={id:"sdk/reference/crypto/ov/exchanges",title:"exchanges",description:"This page provides information about how to show top crypto exchanges through OpenBB's API with detailed parameters, return types and examples.",source:"@site/content/sdk/reference/crypto/ov/exchanges.md",sourceDirName:"sdk/reference/crypto/ov",slug:"/sdk/reference/crypto/ov/exchanges",permalink:"/sdk/reference/crypto/ov/exchanges",draft:!1,unlisted:!1,editUrl:"https://github.com/OpenBB-finance/openbb-docs/edit/main/content/sdk/reference/crypto/ov/exchanges.md",tags:[],version:"current",lastUpdatedBy:"Danglewood",lastUpdatedAt:172011826e4,frontMatter:{title:"exchanges",description:"This page provides information about how to show top crypto exchanges through OpenBB's API with detailed parameters, return types and examples.",keywords:["crypto exchanges","OpenBB API","CoinGecko","cryptocurrency"]},sidebar:"tutorialSidebar",previous:{title:"ewf",permalink:"/sdk/reference/crypto/ov/ewf"},next:{title:"exmarkets",permalink:"/sdk/reference/crypto/ov/exmarkets"}},d={},h=[{value:"Parameters",id:"parameters",level:2},{value:"Returns",id:"returns",level:2},{value:"Examples",id:"examples",level:2}];function p(e){const t={a:"a",code:"code",h2:"h2",hr:"hr",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(o.A,{title:"crypto.ov.exchanges - Reference | OpenBB SDK Docs"}),"\n",(0,r.jsx)(t.p,{children:"Show top crypto exchanges."}),"\n",(0,r.jsxs)(t.p,{children:["Source Code: [",(0,r.jsx)(t.a,{href:"https://github.com/OpenBB-finance/OpenBBTerminal/tree/main/openbb_terminal/cryptocurrency/overview/sdk_helpers.py#L42",children:"link"}),"]"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-python",children:'openbb.crypto.ov.exchanges(source: str = "CoinGecko")\n'})}),"\n",(0,r.jsx)(t.hr,{}),"\n",(0,r.jsx)(t.h2,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Name"}),(0,r.jsx)(t.th,{children:"Type"}),(0,r.jsx)(t.th,{children:"Description"}),(0,r.jsx)(t.th,{children:"Default"}),(0,r.jsx)(t.th,{children:"Optional"})]})}),(0,r.jsx)(t.tbody,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"source"}),(0,r.jsx)(t.td,{children:"str"}),(0,r.jsx)(t.td,{children:'Source to get exchanges, by default "CoinGecko"'}),(0,r.jsx)(t.td,{children:"CoinGecko"}),(0,r.jsx)(t.td,{children:"True"})]})})]}),"\n",(0,r.jsx)(t.hr,{}),"\n",(0,r.jsx)(t.h2,{id:"returns",children:"Returns"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Type"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsx)(t.tbody,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"pd.DataFrame"}),(0,r.jsx)(t.td,{children:"DataFrame with top crypto exchanges"})]})})]}),"\n",(0,r.jsx)(t.hr,{}),"\n",(0,r.jsx)(t.h2,{id:"examples",children:"Examples"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-python",children:"from openbb_terminal.sdk import openbb\nexchanges = openbb.crypto.ov.exchanges()\n"})}),"\n",(0,r.jsx)(t.hr,{})]})}function l(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},94331:(e,t,n)=>{n.d(t,{A:()=>o});n(96540);var r=n(5260),s=n(74848);function o(e){let{title:t}=e;return(0,s.jsx)(r.A,{children:(0,s.jsx)("title",{children:t})})}},28453:(e,t,n)=>{n.d(t,{R:()=>c,x:()=>a});var r=n(96540);const s={},o=r.createContext(s);function c(e){const t=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),r.createElement(o.Provider,{value:t},e.children)}}}]);